<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbProfilePicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAABaCAYAAAA4qEECAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPSSURBVHhe7ZzbS1RRFMYXFVkEBZVFdIGI3oLeEqMo6i2InqQLvZlCQf9A9Bo9WVhBFFHR7T/w
        2eh+MzTv1mhQQZkW9GAXUPtWLGHY7Gg0zz4ze38//HBKO2t939mz5+w5exJCCCGEEEIIITOgILJuQKQR
        ug21QZ+hLyZ9/AK61S/S8EZkrf0zUgqTInMR3H4EeBcahyZLlP5u62uROhxjjh2O+EBIexHWQFF4M1Uv
        TtYeOyyZokNkEYK54Qnsf3X9nchCK5M2GMXVCETnWl9Qs6FnvSLLrFyaYBQvRxBdTjBZqLNbZKmVTQt9
        SiOAp04gWerRkMgCK58OMH7NCSJzYZq6bOXTAIb3+YIIoWSuRvQ6GYb73AACqkt7sHbiBaP5sMd8aB20
        duIFJrO8lCtVT6ydOCmIbPSYzkMTfSLrra34gMHjjuHchCnsmLUVHzB4xzWcl3D1cdPaig8YbHcN56g2
        ays+YG7EMZunhq2t+IC5n47ZPPXD2ooPj9lcZW3Fh89snrK24sNnNk9ZW/EBc79cszkq6jmaVx0hgLmX
        jtnchJXhc2srPmCQK8MQYBQd9ZnOQwi6wdqKD757FxCMpIce46F1z9qJF95hCYTdM+x1jIdUGvcMFUwf
        22F4wgkghMZRe4u1kQYwfdEJIYTOWfl00F1DMB50pxJeH6qsfFrgacy9d6HAKONu0lDYhkeds2fzBXIC
        J/FCkhsb/wWmkt0Ip98T2nTVg+PstMMSH3qNi8D5GZaQ/OVTWTq9qPipLEIIIYQQQgiJEqwGl2AZXYvV
        3hHoDFZ+LdB9/N0r/PktHv/5/zrscYf+DGrBz5ugejyuwffFdjgyxaDISoRzCLoKDUG+9zFmogJOxhXo
        AJbnK6xcWsD8Zui0jlIEEuLeodZoR71TCH2TtREnMLkBZk9C3WY+T3XiRJ+IZhNNq8g8BFwHPfCYLQtp
        b9pjRW5BQONVGDENMFIOo7dUdaLv+m6R+WajfLHNMfr+8YciA5Wm91Bj2Y5wjIZaNPi4qOGKlk4p+F5j
        9vLHbqxegkJcPYSWemrWqdDs5oNeKqGREPsy8labbjk222HBWd6BBr46DcWsUbzAbzP7YUBB3aT43Wkk
        BY3hWbzVYsgW3fWDgsNOAynpY5DtZSjU7BROTpg2myyO7EChQbdwgsJXxqDCWFHBVPXN4sgOFJnNtzIr
        VfjKGMxP552iKeqsxZEdPSKrUGjUKZySPmGwVVsc2dInsgsF9ZaSr5GYNaILNYshDCi4xqaRAjSd7bWV
        JvWmHpuxUFtt9gkhhBBCCCGEEEISRuQ3ZSljR6r1B14AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBQAAAEAIAB4CgAAFgAAACgAAAAgAAAAKAAAAAEAIAAAAAAAAAoAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACchxwAnIccdJyHHbSchx3QnIcdzJyHHcychx3MnIcd0JyHHZychxxonIccAJyHHAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJyHHACchxwsnIceLJyHH+ichx/8nIcf/JyHH/ychx/8nIcf/JyHHsich
        xxwnIccAJyHHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyHHACchxwonIceJJyHH+ichx/8nIcf/JyHH/ych
        x/8nIcf/JyHHsSchxxsnIccAJyHHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyHIACchyQsnIceLJyHH+ich
        x/8nIcf/JyHH/ychx/8nIcf/JyHHrychxxonIccAJyHHAAAAAAAAAAAAAAAACAAAACUAAAASAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAARAAAAMgAAADsAAAAiAAAAAwAAAAAAAAADAAAAHgAAADkAAAA1AAAAEych
        yQsnIceMJyHH+ichx/8nIcf/JyHH/ychx/8nIcf/JyHHrichxxknIccAJyHHAAAAAAAAAAAvAAAA1wAA
        AGsAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAMoAAADsAAAA7AAAAOEAAAB1AAAAEgAAAIYAAADgAAAA7AAA
        AOwAAADIAAAAOy8o8AonIceOJyHH+ychx/8nIcf/JyHH/ychx/8nIcf/JyHHrSchxxknIccAJyHHAAAA
        ADMAAADtAAAAdgAAAAAAAAAAAAAAAAAAAAAAAABxAAAAuwAAAFoAAABAAAAAqQAAAOoAAABCAAAArAAA
        AJUAAABGAAAAVAAAAOAAAACwAAAABSgizgwnIcePJyHH+ychx/8nIcf/JyHH/ychx/8nIcf/JyHHrCch
        xxgnIccAAAAAMwAAAOwAAAC1AAAAcgAAAG8AAAA8AAAABAAAAAgAAAAOAAAAFAAAADwAAACuAAAA9AAA
        ADsAAAAMAAAACwAAACEAAABaAAAA4wAAAL8AAAAJFxN0ACchxw0nIceQJyHI+ychx/8nIcf/JyHH/ych
        x/8nIcf/JyHHqSchxxsAAAAzAAAA6gAAAO0AAADbAAAA6QAAAOwAAABYAAAAEAAAAIYAAADaAAAA+AAA
        APcAAACdAAAADAAAADUAAACvAAAA6QAAAP0AAADlAAAAXAAAAAAAAAAAJiDBACchwAwhHKurJiDE/ych
        x/8nIcf/JyHH/ychx/8nIcf+JyHHqQAAADMAAADtAAAAggAAABIAAAAyAAAA3AAAALEAAAB2AAAA+wAA
        AMQAAAB/AAAAQQAAAAoAAAAMAAAAvwAAAPIAAACnAAAAaAAAACkAAAACAAAAAAAAAAAAAAAAAAAAPgIC
        DdgXE3P/JyHH/ychx/8nIcf/JyHH/ychx+AnIcdXAAAAMwAAAOwAAACHAAAAGgAAADsAAADfAAAArwAA
        AIsAAADzAAAATwAAABgAAABVAAAAVwAAABUAAADUAAAAwwAAACMAAAAmAAAAbwAAAC0AAAAAAAAAAAAA
        AD4AAADZAAAA/wICDP4YFHr9JyHH/ychyP8nIcfhJyHHSSchxwAAAAAzAAAA6gAAAPEAAADiAAAA7gAA
        AOcAAABQAAAAMQAAANIAAADoAAAA4AAAAPMAAACmAAAADAAAAHIAAADrAAAA4AAAAOgAAADsAAAAXwAA
        AAAAAAA9AAAA2AAAAP8AAAD/AAAA/wICDf4XFHb/JiDD4CchyEknIccAJyHHAAAAABQAAABbAAAAZQAA
        AGUAAABgAAAAMgAAAAMAAAAAAAAAIwAAAGEAAABvAAAASwAAABIAAAAAAAAABgAAAD0AAABtAAAAZwAA
        ADQAAAAEAAAAPAAAANcAAAD/AAAA/wAAAP8AAAD/AAAA/wMCDuMWE3BJAAAAACchxwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADwAAADXAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADlAAAATwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA8AAAA1wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA5gAAAFIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAAANkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOgAAABVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUAAAC1AAAA3wAAANwAAADcAAAA3AAAAN0AAADPAAAAVAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAB0AAAAbAAAAGwAAABsAAAAbAAAAGwAA
        ABQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////AH///wA///+AH///
        wA8fBAAHHgAAAx4AAAEAAAQAAAAOAAAADgAAAAwBAAAIAwEEAAf//+AP///AH///gD///wA///8Af///
        //8=
</value>
  </data>
</root>